RoadMap:

1. Scraping Data

2. Data Collection and Selection:  
  Take educational videos from 3rd party like (YouTube , https://paperswithcode.com/dataset/eduvsum)
  Explore transfer learning opportunities using pre-trained models if applicable.

3. Frame Extraction:
  Extracting frames using ffmpeg

4. Labeling Dataset:
  Labeling the video frames dataset as slide, presenter slide and others.

5. Model Training
  Base Models: Resnet50, EAST, LLama2-7b
  Future Scope: Try more SOTA models.

6. Image Tuning Operations (Crop Transform, Border Removal, Segment Clustering, Image Hashing)

7. Sequential Data context Search

8. OCR, Figure Detection

9. Transcribe: (multimodal)
  Audio to Transcript Generation:
  Explore automatic speech recognition (ASR) models, possibly leveraging existing ML-based solutions.

10. Combination, Sync

11. Text Operations (Spell Check, etc..)

12. Summarization (Extractive, Abstractive), Quiz Gen:
  Using LLama2 finetuning, trying out pre existing trained on specific dataset like BERT-edu
  
  Answer Key/ Options Generation:
  Sense2vec wordvectors that are used for generation of multiple choices.
  Research about giving similar options which are not correct as options.


Future Scope:
Assessment Mechanism:
Incorporating natural language understanding (NLU) model.
Score Reinforcement Learning

Database Integration:
Using data indexing and retrieval, improving efficiency.

Security:
Only the user or accessed person will be able to see your lectures and generated notes.

Make an internal AI to help navigating through the portal.


Process:
Extract frames from video file 

Classify extracted frames to find frames containing slides

Perspective crop images containing the presenter and slide to contain only the slide by matching temporal features

Cluster slides to group transitions and remove duplicates

Run a Slide Structure Analysis (SSA) using OCR on the slide frames to obtain a formatted transcript of the text on the slides

Detect and extract figures from the set of unique slide frames

Transcribe the lecture using a speech-to-text algorithm

Summarize the visual and auditory transcripts

Combine

Run some modifications (such as only using complete sentences)

Extractive summarization

Abstractive summarization

Convert intermediate outputs to a final notes file (HTML, TXT, markdown, etc.)



*This gives just the basic idea of the implementation and we will be changing/enhancing a lot of things here.*
https://github.com/thisisgagangupta/EduPrepAI
